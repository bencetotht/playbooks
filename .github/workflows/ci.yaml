name: Ansible Playbook CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  discover-playbooks:
    name: Discover Playbooks
    runs-on: ubuntu-latest
    outputs:
      playbooks: ${{ steps.discover.outputs.playbooks }}
      playbooks-json: ${{ steps.discover.outputs.playbooks-json }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Discover playbook directories
      id: discover
      run: |
        # Find all directories that contain a site.yaml file
        playbooks=$(find . -maxdepth 2 -name "site.yaml" -type f | sed 's|^\./||' | sed 's|/site.yaml$||' | sort)
        
        # Convert to JSON array for matrix
        playbooks_json=$(echo "$playbooks" | jq -R -s -c 'split("\n")[:-1]')
        
        echo "Discovered playbooks:"
        echo "$playbooks"
        echo ""
        echo "JSON format:"
        echo "$playbooks_json"
        
        # Set outputs
        echo "playbooks<<EOF" >> $GITHUB_OUTPUT
        echo "$playbooks" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "playbooks-json<<EOF" >> $GITHUB_OUTPUT
        echo "$playbooks_json" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

  ansible-lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    needs: discover-playbooks
    strategy:
      matrix:
        playbook-dir: ${{ fromJson(needs.discover-playbooks.outputs.playbooks-json) }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Ansible and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ansible ansible-lint yamllint jq
        
    - name: Verify Ansible installation
      run: ansible --version
      
    - name: Verify ansible-lint installation
      run: ansible-lint --version
      
    - name: Verify yamllint installation
      run: yamllint --version
      
    - name: Lint YAML syntax
      run: |
        echo "Checking YAML syntax for ${{ matrix.playbook-dir }}"
        find ${{ matrix.playbook-dir }} -name "*.yaml" -o -name "*.yml" | while read file; do
          echo "Checking: $file"
          python -c "import yaml; yaml.safe_load(open('$file'))" || exit 1
        done
        
    - name: Run yamllint
      run: |
        echo "Running yamllint for ${{ matrix.playbook-dir }}"
        yamllint -c .yamllint ${{ matrix.playbook-dir }}/
      continue-on-error: true
      
    - name: Run ansible-lint
      run: |
        echo "Running ansible-lint for ${{ matrix.playbook-dir }}"
        cd ${{ matrix.playbook-dir }}
        ansible-lint site.yaml
      continue-on-error: true
      
    - name: Check for ansible.cfg
      run: |
        if [ -f "${{ matrix.playbook-dir }}/ansible.cfg" ]; then
          echo "Found ansible.cfg in ${{ matrix.playbook-dir }}"
          ansible-lint --config-file="${{ matrix.playbook-dir }}/ansible.cfg" "${{ matrix.playbook-dir }}/site.yaml"
        else
          echo "No ansible.cfg found in ${{ matrix.playbook-dir }}, using default config"
        fi
      continue-on-error: true

  yaml-syntax-check:
    name: YAML Syntax Check
    runs-on: ubuntu-latest
    needs: discover-playbooks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install PyYAML
      run: pip install PyYAML
      
    - name: Check YAML syntax for all files
      run: |
        echo "Checking YAML syntax for all YAML files..."
        find . -name "*.yaml" -o -name "*.yml" | grep -v ".git" | while read file; do
          echo "Checking: $file"
          python -c "
        import yaml
        import sys
        try:
            with open('$file', 'r') as f:
                yaml.safe_load(f)
            print('✓ $file - Valid YAML')
        except yaml.YAMLError as e:
            print('✗ $file - Invalid YAML: {e}')
            sys.exit(1)
        except Exception as e:
            print('✗ $file - Error: {e}')
            sys.exit(1)
        " || exit 1
        done
        echo "All YAML files have valid syntax!"
        
    - name: Show discovered playbooks
      run: |
        echo "Discovered playbooks:"
        echo "${{ needs.discover-playbooks.outputs.playbooks }}"

  inventory-validation:
    name: Inventory Validation
    runs-on: ubuntu-latest
    needs: discover-playbooks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Ansible
      run: pip install ansible
      
    - name: Validate inventory files
      run: |
        echo "Discovered playbooks:"
        echo "${{ needs.discover-playbooks.outputs.playbooks }}"
        echo ""
        
        # Process each discovered playbook
        echo "${{ needs.discover-playbooks.outputs.playbooks }}" | while read -r playbook_dir; do
          if [ -n "$playbook_dir" ] && [ -d "$playbook_dir" ] && [ -f "$playbook_dir/inventory/hosts.ini" ]; then
            echo "Validating inventory for $playbook_dir"
            ansible-inventory -i "$playbook_dir/inventory/hosts.ini" --list > /dev/null || {
              echo "Invalid inventory file: $playbook_dir/inventory/hosts.ini"
              exit 1
            }
            echo "✓ $playbook_dir inventory is valid"
          elif [ -n "$playbook_dir" ] && [ -d "$playbook_dir" ]; then
            echo "⚠ $playbook_dir has no inventory (skipping validation)"
          fi
        done

  playbook-syntax-check:
    name: Playbook Syntax Check
    runs-on: ubuntu-latest
    needs: discover-playbooks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Ansible
      run: pip install ansible
        
    - name: Check playbook syntax
      run: |
        echo "Discovered playbooks:"
        echo "${{ needs.discover-playbooks.outputs.playbooks }}"
        echo ""
        
        # Process each discovered playbook
        echo "${{ needs.discover-playbooks.outputs.playbooks }}" | while read -r playbook_dir; do
          if [ -n "$playbook_dir" ] && [ -d "$playbook_dir" ] && [ -f "$playbook_dir/site.yaml" ]; then
            echo "Checking syntax for $playbook_dir/site.yaml"
            
            # Check if it has inventory (most playbooks do)
            if [ -f "$playbook_dir/inventory/hosts.ini" ]; then
              echo "  Using inventory: $playbook_dir/inventory/hosts.ini"
              cd "$playbook_dir"
              ansible-playbook --syntax-check site.yaml -i inventory/hosts.ini || {
                echo "Syntax error in $playbook_dir/site.yaml"
                exit 1
              }
              cd ..
            else
              echo "  No inventory found, checking syntax only"
              cd "$playbook_dir"
              ansible-playbook --syntax-check site.yaml --list-hosts || {
                echo "Syntax error in $playbook_dir/site.yaml"
                exit 1
              }
              cd ..
            fi
            echo "✓ $playbook_dir/site.yaml syntax is valid"
          fi
        done
