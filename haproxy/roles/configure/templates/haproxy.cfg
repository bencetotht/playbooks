global
    log stdout  format raw  local0  info
    daemon

defaults
    log  global
    maxconn  8000
    option  redispatch
    retries  3
    timeout  http-request 10s
    timeout  queue 1m
    timeout  connect 10s
    timeout  client 1m
    timeout  server 1m
    timeout  check 10s
    mode http
    option http-server-close

frontend http
	bind :8080
	default_backend stats

backend stats
	mode http
	stats enable
	stats uri /
	stats refresh 1s
	stats show-legends
	stats admin if TRUE

frontend prometheus
    bind *:8405
    mode http
    http-request use-service prometheus-exporter if { path /metrics }
    no log

frontend apiserver
    bind 0.0.0.0:6443
    option tcplog
    mode tcp
    default_backend apiserver

frontend postgres_frontend
    bind *:5432
    mode tcp
    default_backend postgres_backend

frontend redis_frontend
    bind *:6379
    mode tcp
    default_backend redis_backend

frontend redis_frontend_readonly
    bind *:6380
    mode tcp
    default_backend redis_backend_readonly

backend postgres_backend
    mode tcp
    option tcp-check
    option httpchk GET /primary
    http-check expect status 200
    timeout connect 5s
    timeout client 30s
    timeout server 30s
    server postgresql-01 192.168.88.56:5432 port 8008 check check-ssl verify none
    server postgresql-02 192.168.88.57:5432 port 8008 check check-ssl verify none
    server postgresql-03 192.168.88.58:5432 port 8008 check check-ssl verify none

backend apiserver
    mode tcp
    option tcp-check
    balance roundrobin
    server server1 192.168.88.11:6443 check
    server server2 192.168.88.12:6443 check
    server server3 192.168.88.13:6443 check

backend redis_backend
    mode tcp
    balance first
    option tcp-check
    timeout check 5s

    tcp-check send "AUTH myStrongPassword\r\nINFO replication\r\n"
    tcp-check expect string "role:master"

    server redis-01 192.168.88.61:6379 maxconn 1024 check inter 1s
    server redis-02 192.168.88.62:6379 maxconn 1024 check inter 1s
    server redis-03 192.168.88.63:6379 maxconn 1024 check inter 1s

backend redis_backend_readonly
    mode tcp
    balance roundrobin
    option tcp-check
    timeout check 5s

    tcp-check send "AUTH myStrongPassword\r\nPING\r\n"
    tcp-check expect string "PONG"

    server redis-01 192.168.88.61:6379 maxconn 1024 check inter 1s
    server redis-02 192.168.88.62:6379 maxconn 1024 check inter 1s
    server redis-03 192.168.88.63:6379 maxconn 1024 check inter 1s
